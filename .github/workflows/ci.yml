name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 22.16.0
          cache: "yarn"

      - name: Install app dependencies
        run: yarn install --frozen-lockfile

      - name: Build app
        run: yarn build
        env:
          NEXT_TELEMETRY_DISABLED: "1"

      - name: Deploy containers
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no root@angelin.dev << 'EOF'
            cd repositories/portfolio3
            git pull
            
            rm .env
            echo "APP_PORT=${{ secrets.APP_PORT }}" >> .env
            echo "APP_REVALIDATE_SECRET=${{ secrets.APP_REVALIDATE_SECRET }}" >> .env
            echo "NEXT_TELEMETRY_DISABLED=${{ secrets.APP_NEXT_TELEMETRY_DISABLED }}" >> .env
            docker build -t portfolio3_app .
            
            cd strapi
            rm .env
            echo "HOST=0.0.0.0" >> .env
            echo "PORT=1337" >> .env
            echo "DATABASE_CLIENT=sqlite" >> .env
            echo "DATABASE_SSL=false" >> .env
            echo "DATABASE_FILENAME=.tmp/data.db" >> .env
            echo "APP_KEYS=${{ secrets.STRAPI_APP_KEYS }}" >> .env
            echo "API_TOKEN_SALT=${{ secrets.STRAPI_API_TOKEN_SALT }}" >> .env
            echo "ADMIN_JWT_SECRET=${{ secrets.STRAPI_ADMIN_JWT_SECRET }}" >> .env
            echo "TRANSFER_TOKEN_SALT=${{ secrets.STRAPI_TRANSFER_TOKEN_SALT }}" >> .env
            echo "ENCRYPTION_KEY=${{ secrets.STRAPI_ENCRYPTION_KEY }}" >> .env
            echo "JWT_SECRET=${{ secrets.STRAPI_JWT_SECRET }}" >> .env
            docker build -t portfolio3_strapi .

            cd ..

            docker compose down
            docker compose up -d
          EOF
